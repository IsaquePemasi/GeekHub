@page "/catalogo"
@inject IMangaService _mangaService
@inject NavigationManager NavigationManager

<PageTitle>Catálogo</PageTitle>


@if (Mangas == null)
{
    <Spinner />
}
else
{
    <img src="/importados.gif" style="width: 100%;border-radius:20px;" />
    <br />
    <br />
    <div class="form-inline">
        <input type="text" class="form-control mb-2 mr-sm-2"
        @bind="nomeFiltro"
               placeholder="Filtrar por titulo" />
        <button type="button" class="btn btn-primary mr-sm-2 mb-2" @onclick="Filtrar">
            Filtrar
        </button>
        <button type="button" class="btn btn-danger mb-2" @onclick="LimparFiltro">
            Limpar
        </button>
    </div>

    @if (Mangas.Count() > 0)
    { 
        <div class="row mt-3">
           <ExibirMangas Mangas="@Mangas"></ExibirMangas>
        </div>
        <Rodape />
    }
}

@code {
    public IEnumerable<MangaDTO>? Mangas { get; set; }
    public string? MensagemErro { get; set; }

    private int QuantidadeTotalPaginas;
    private int paginaAtual = 1;
    private string nomeFiltro = string.Empty;
    Confirma confirma = null;

    private async Task Filtrar()
    {
        paginaAtual = 1;
        await CarregaCatalogo(nomeFiltro);
    }

    private async Task LimparFiltro()
    {
        nomeFiltro = string.Empty;
        paginaAtual = 1;
        await CarregaCatalogo();
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await CarregaCatalogo();
        }
        catch (UnauthorizedAccessException)
        {
            NavigationManager.NavigateTo("notauthorized");
        }
        catch (Exception ex)
        {
            MensagemErro = ex.Message;
        }
    }

    async Task CarregaCatalogo(string mangaTitulo = null)
    {
        try
        {
            if (mangaTitulo is not null)
            {
                Mangas = await _mangaService.GetMangasPorTitulo(mangaTitulo);
            }
            else
            {
                Mangas = await _mangaService.GetMangas();
            }
        }
        catch (Exception)
        {
            NavigationManager.NavigateTo("notauthorized");
        }
    }
}
